{"version":3,"sources":["scripts/main.js"],"names":["convertSalary","salary","parseInt","slice","split","join","getEmployersObjects","employers","map","el","name","innerText","position","dataset","age","sortBySalary","list","children","sort","s1","s2","salary1","salary2","forEach","emp","listEl","insertAdjacentElement","document","querySelector"],"mappings":";AAAA,aAgCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9BA,SAASA,EAAcC,GACdC,OAAAA,SAASD,EAAOE,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAIlD,SAASC,EAAoBC,GACpB,OAAA,EAAIA,GAAWC,IAAI,SAAAC,GAAO,MAAA,CAC/BC,KAAMD,EAAGE,UACTC,SAAUH,EAAGI,QAAQD,SACrBX,OAASD,EAAcS,EAAGI,QAAQZ,QAClCa,IAAKZ,SAASO,EAAGI,QAAQC,QAI7B,SAASC,EAAaC,GACdT,IAAAA,EAAgBS,EAAAA,EAAKC,UAE3BV,EAAUW,KAAK,SACmB,EAAA,GADGC,IAAAA,EAAnBN,EAAAA,QAAWZ,OACNmB,EAAnBP,EAAAA,QAAWZ,OACPoB,EAAUrB,EAAcmB,GAGvBG,OAFStB,EAAcoB,GAEbC,IAGnBd,EAAUgB,QAAQ,SAAAC,GAAOC,OAAAA,EAAOC,sBAAsB,YAAaF,KAGrE,IAAMC,EAASE,SAASC,cAAc,MAEtCb,EAAaU","file":"main.5c20d0dc.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction convertSalary(salary) {\n  return parseInt(salary.slice(1).split(',').join(''));\n}\n\n// this function was in tasks list\nfunction getEmployersObjects(employers) {\n  return [...employers].map(el => ({\n    name: el.innerText,\n    position: el.dataset.position,\n    salary:  convertSalary(el.dataset.salary),\n    age: parseInt(el.dataset.age),\n  }));\n}\n\nfunction sortBySalary(list) {\n  const employers = [...list.children];\n\n  employers.sort(({ dataset: { salary: s1 } },\n    { dataset: { salary: s2 } }) => {\n    const salary1 = convertSalary(s1);\n    const salary2 = convertSalary(s2);\n\n    return salary2 - salary1;\n  });\n\n  employers.forEach(emp => listEl.insertAdjacentElement('beforeend', emp));\n}\n\nconst listEl = document.querySelector('ul');\n\nsortBySalary(listEl);\n"]}